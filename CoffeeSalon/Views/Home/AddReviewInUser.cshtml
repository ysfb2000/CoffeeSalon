@{
    ViewData["Title"] = "Add Review";
}

@model CoffeeSalon.Models.Review

<style>
    .star-rating {
        display: inline-block;
        direction: ltr;
    }

    .star {
        font-size: 2em;
        color: #ccc;
        cursor: pointer;
        transition: color 0.3s;
    }

        .star:hover,
        .star.selected {
            color: #ffcc00; /* Yellow for selected stars */
        }

    .star-rating .star:hover {
        color: #ffcc00; /* Hover effect for the star */
    }
</style>

<!-- /navigation -->
<div class="header text-center">
    <div class="container">
        <div class="row">
            <div class="col-lg-9 mx-auto">
                <h1 class="mb-4">Add a Review for a Coffee Shop</h1>
            </div>
        </div>
    </div>

    <svg class="header-shape-1" width="39" height="40" viewBox="0 0 39 40" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0.965848 20.6397L0.943848 38.3906L18.6947 38.4126L18.7167 20.6617L0.965848 20.6397Z" stroke="#040306"
              stroke-miterlimit="10" />
        <path class="path" d="M10.4966 11.1283L10.4746 28.8792L28.2255 28.9012L28.2475 11.1503L10.4966 11.1283Z" />
        <path d="M20.0078 1.62949L19.9858 19.3804L37.7367 19.4024L37.7587 1.65149L20.0078 1.62949Z" stroke="#040306"
              stroke-miterlimit="10" />
    </svg>


    <svg class="header-shape-2" width="39" height="39" viewBox="0 0 39 39" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g filter="url(#filter0_d)">
            <path class="path"
                  d="M24.1587 21.5623C30.02 21.3764 34.6209 16.4742 34.435 10.6128C34.2491 4.75147 29.3468 0.1506 23.4855 0.336498C17.6241 0.522396 13.0233 5.42466 13.2092 11.286C13.3951 17.1474 18.2973 21.7482 24.1587 21.5623Z" />
            <path d="M5.64626 20.0297C11.1568 19.9267 15.7407 24.2062 16.0362 29.6855L24.631 29.4616L24.1476 10.8081L5.41797 11.296L5.64626 20.0297Z"
                  stroke="#040306" stroke-miterlimit="10" />
        </g>
        <defs>
            <filter id="filter0_d" x="0.905273" y="0" width="37.8663" height="38.1979" filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix" />
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
                <feOffset dy="4" />
                <feGaussianBlur stdDeviation="2" />
                <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow" />
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape" />
            </filter>
        </defs>
    </svg>


    <svg class="header-shape-3" width="39" height="40" viewBox="0 0 39 40" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0.965848 20.6397L0.943848 38.3906L18.6947 38.4126L18.7167 20.6617L0.965848 20.6397Z" stroke="#040306"
              stroke-miterlimit="10" />
        <path class="path" d="M10.4966 11.1283L10.4746 28.8792L28.2255 28.9012L28.2475 11.1503L10.4966 11.1283Z" />
        <path d="M20.0078 1.62949L19.9858 19.3804L37.7367 19.4024L37.7587 1.65149L20.0078 1.62949Z" stroke="#040306"
              stroke-miterlimit="10" />
    </svg>


    <svg class="header-border" height="240" viewBox="0 0 2202 240" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M1 123.043C67.2858 167.865 259.022 257.325 549.762 188.784C764.181 125.427 967.75 112.601 1200.42 169.707C1347.76 205.869 1901.91 374.562 2201 1"
              stroke-width="2" />
    </svg>
</div>

<section class="section-sm">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto">

                <div class="content mb-5">
                    <h2 id="we-would-love-to-hear-from-you">We would Love To Hear From You&hellip;.</h2>
                    <p>Your review means the world to us. Whether you have a suggestion, opinion or just want to say anything, we’re here and ready to listen. Be a part of a CoffeeSalon Community.</p>
                </div>

                <form asp-action="Edit" asp-controller="Home" enctype="multipart/form-data" method="post">
                    <div class="form-group">
                        <label asp-for="ItemName" for="ItemName">Item Name (Required)</label>
                        <input asp-for="ItemName" type="text" name="ItemName" id="ItemName" class="form-control" placeholder="Enter item name" required>
                        <span asp-validation-for="ItemName" class="text-danger"></span>
                    </div>

                    @* <div class="form-group"> *@
                    @*     <label asp-for="" for="ItemName">Shop Name (Required)</label> *@
                    @*     <input type="text" name="ItemName" id="ItemName" class="form-control" placeholder="Enter item name" required> *@
                    @* </div> *@
                    
                    <div class="form-group">
                        <div class="star-rating" id="star-rating">
                            <label asp-for ="Rating" for="ReviewText">Rating </label>
                            <span class="star" data-value="1">&#9733;</span>
                            <span class="star" data-value="2">&#9733;</span>
                            <span class="star" data-value="3">&#9733;</span>
                            <span class="star" data-value="4">&#9733;</span>
                            <span class="star" data-value="5">&#9733;</span>
                        </div>
                        <input asp-for="Rating" type="hidden" name="Rating" id="rating-input" value="0">
                    </div>

                    <div class="form-group">
                        <label asp-for="ReviewText" for="ReviewText">Review Text (Required)</label>
                        <textarea asp-for="ReviewText" name="ReviewText" id="ReviewText" class="form-control" placeholder="Enter your review here..." required></textarea>
                    </div>

                    <div class="form-group">
                        <label asp-for="Image" for="Image">Upload Image</label>
                        <input type="file" name="Image" id="Image" class="form-control" />
                    </div>

                    @* <div> *@
                    @*     @if (Model.Image != null) *@
                    @*     { *@
                    @*         <img id="imagePreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Image)" *@
                    @*              alt="Review Image" *@
                    @*              style="max-width: 200px; border-radius: 8px;" /> *@
                    @*     } *@
                    @*     else *@
                    @*     { *@
                    @*         <img id="imagePreview" src="" alt="Review Image" style="max-width: 200px; border-radius: 8px;" /> *@
                    @*     } *@
                    @* </div> *@

                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </form>

            </div>
        </div>
    </div>
</section>

<script>
    // JavaScript to handle hover and click events for rating
    const stars = document.querySelectorAll('.star');
    const ratingInput = document.getElementById('rating-input');

    // Handle hover to change color of stars
    stars.forEach(star => {
        star.addEventListener('mouseenter', () => {
            const value = parseInt(star.getAttribute('data-value'));
            resetStars();
            highlightStars(value);
        });

        // Handle click to select the rating
        star.addEventListener('click', () => {
            const value = parseInt(star.getAttribute('data-value'));
            ratingInput.value = value;  // Set the rating in the hidden input
        });
    });

    // Reset all stars' color
    function resetStars() {
        stars.forEach(star => {
            star.classList.remove('selected');
        });
    }

    // Highlight stars based on the value
    function highlightStars(value) {
        stars.forEach(star => {
            if (parseInt(star.getAttribute('data-value')) <= value) {
                star.classList.add('selected');
            }
        });
    }

    // Reset stars on mouse leave
    document.querySelector('.star-rating').addEventListener('mouseleave', () => {
        resetStars();
        if (ratingInput.value > 0) {
            highlightStars(ratingInput.value);
        }
    });

    document.getElementById('imageInput').addEventListener('change', function (event) {
            const preview = document.getElementById('imagePreview');
            const file = event.target.files[0];

            if (file) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };

                reader.readAsDataURL(file); // Convert image to base64
            } else {
                preview.src = '';
                preview.style.display = 'none';
            }
        });
</script>